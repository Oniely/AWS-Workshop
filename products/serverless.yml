# "org" ensures this Service is used with the correct Serverless Framework License Key.
org: oniely
# "service" is the name of this project. This will also be added to your AWS resource names.
service: workshop

provider:
  name: aws
  runtime: python3.12
  region: us-east-2
  environment:
    PRODUCT_TABLE: "products-oniely"
  
plugins:
  - serverless-offline
  - serverless-prune-plugin

custom:
  prune:
    automatic: true
    number: 5


functions:
  # API Endpoints
  hello:
    handler: handler.api.hello
    events:
      - httpApi:
          path: /
          method: get
  getAllProducts:
    handler: handler.api.get_all_products
    events:
      - httpApi:
          path: /products
          method: get
  createOneProduct:
    handler: handler.api.create_one_product
    events:
      - httpApi:
          path: /products
          method: post
  getProduct:
    handler: handler.api.get_product
    events:
      - httpApi:
          path: /products/{id}
          method: get
  deleteProduct:
    handler: handler.api.delete_product
    events:
      - httpApi:
          path: /products/{id}
          method: delete
  updateProduct:
    handler: handler.api.update_product
    events:
      - httpApi:
          path: /products/{id}
          method: put
          
  # s3 functions
  batchCreateProducts:
    handler: handler.s3.batch_create_products
    events:
      - s3:
          bucket: products-s3bucket-oniely
          event: s3:ObjectCreated:*
          existing: true
          rules:
            - prefix: for_create/
  batchDeleteProducts:
    handler: handler.s3.batch_delete_products
    events:
      - s3:
          bucket: products-s3bucket-oniely
          event: s3:ObjectCreated:*
          existing: true
          rules:
            - prefix: for_delete/
            
  # sqs functions
  receiveMessagesFromSqs:
    handler: handler.sqs.receive_message_from_sqs
    events:
      - sqs:
            arn:
              Fn::GetAtt:
                - MySQSQueue
                - Arn

resources:
  Resources:
    MySQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: sqs-queue-yml
        VisibilityTimeout: 30
        MessageRetentionPeriod: 120960
  
